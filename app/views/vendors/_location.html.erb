<% content_for :location do %>
  <div class="field_group">
    <h3>Address</h3>
    <%= f.fields_for :address do |builder| %>
      <%= render 'vendors/address', :f => builder %>
    <% end %>
    <div class="field">
      <%= f.label :phone, "Public Phone Number" %>
      <%= f.text_field :phone, :class => "required location_phone" %>
    </div>
    <% if @location.vendor.has_completed_final_signup? %>
	    <div class="field">
	      <%= f.label :fax_number, "Order Fax Number" %>
	      <%= f.text_field :fax_number %>
	    </div>
    <% end %>
</div>

  <div class="field_group label_yes_no">
    <h3>What kind of orders will this location accept?</h3>
    <p><b>Note:</b> these options can be easily turned on or off at any time.</p><br>



    
    <div class="field">
      Take out?
      <%= f.radio_button :take_out, true,  :checked => true, :class => 'onsite-orders take-out yes' %>
      <%= f.label :take_out_true, "Yes" %>
      <%= f.radio_button :take_out, false, :class => 'onsite-orders' %>
      <%= f.label :take_out_false, "No" %>
      <!-- <p class="info_note">Customer picks up their order at your location.</p> --> 
    </div>


    <div class="field">
      Delivery?
      <%= f.radio_button :address_delivery, true, :checked => true, :class => 'delivery-orders address-delivery yes' %>
      <%= f.label :address_delivery_true, "Yes" %>
      <%= f.radio_button :address_delivery, false, :class => 'delivery-orders' %>
      <%= f.label :address_delivery_false, "No" %><br />
      <!-- <p class="info_note">Traditional address delivery.  We will send you a full address. </p> -->
    </div>

    <div class="field">
      Do you have a staff member with an iPhone <br>who is currently available to make deliveries?
      <%= f.radio_button :spot_delivery, true, :checked => true, :class => 'delivery-orders spot-delivery yes' %>
      <%= f.label :spot_delivery_true, "Yes" %>
      <%= f.radio_button :spot_delivery, false,  :class => 'delivery-orders' %>
      <%= f.label :spot_delivery_false, "No" %><br />
      <!--   
         <p class="info_note"><b>This option will attract the highest number of new orders. </b> <br>Your delivery staff can use our free app on their their own smartphones (Android or iPhone) to deliver to a customer's GPS location.</p>
      -->
    </div>
    <!--
    <div class="field">
      Dine in?
      <%= f.radio_button :dine_in, true, :checked => true, :class => 'onsite-orders dine-in yes' %>
      <%= f.label :dine_in_true, "Yes" %>
      <%= f.radio_button :dine_in, false,  :class => 'onsite-orders' %>
      <%= f.label :dine_in_false, "No" %>
      <p class="info_note">Customer adds orders to their tab (or sends in a new order) while dining at your location.</p>
    </div>
     --> 
  </div>

  <div class="field_group">
    <div class="field">
      <%= f.label :delivery_minimum_amount, "Minimum delivery order" %>
      <%= f.text_field :delivery_minimum_amount, value: number_to_currency( f.object.delivery_minimum_amount || f.object.delivery_minimum / 100.0) %>
      <p class="info_note">This is the minimum amount required for delivery orders. It will always be at least $5.00.</p>
    </div>
    <div class="field">
      <%= f.label :delivery_fee_amount, "Delivery fee" %>
      <%= f.text_field :delivery_fee_amount, value: number_to_currency( f.object.delivery_fee_amount || f.object.delivery_fee / 100.0) %>
      <p class="info_note">This is the fee automatically applied to any delivery orders. Leave at $0.00 if no charge should be required.</p>
    </div>
  </div>

  <% if @location.vendor.has_completed_final_signup? %>

	  <div class="field_group operational-hours-builder">
	    <h4>What are the store hours for this location?</h4>
	    <table id='hours'>
	      <tr>
	        <th></th>
	        <th>Open</th>
	        <th>Close</th>
	        <th></th>
	      </tr>
	      <%= f.fields_for :hours do |builder| %>
	        <%= render 'vendors/hour', :f => builder %>
	      <% end %>
	    </table>
	    <div class="field">
	      <h4>Local Time Zone:</h4>
	      <%= f.select :time_zone, Location::TIME_ZONES %>
	    </div>
	  </div>
	  <div class="field_group delivery-hours-builder">
	    <h4>What are the delivery hours for this location? (we will only send delivery orders inside these hours)</h4>
	    <div class="field operational-hours-builder">
	      Same as store hours?
	      <%= f.radio_button :use_hours_for_delivery_hours, true, :class => 'match-hours yes' %>
	      <%= f.label :use_hours_for_delivery_hours_true, 'Yes' %>
	      <%= f.radio_button :use_hours_for_delivery_hours, false, :class => 'match-hours no' %>
	      <%= f.label :use_hours_for_delivery_hours_true, 'No' %>
	    </div>
	    <table id='hours' class="delivery-hours" >
	      <tr>
	        <th></th>
	        <th>Open</th>
	        <th>Close</th>
	        <th></th>
	      </tr>
	      <%= f.fields_for :delivery_hours do |builder| %>
	        <%= render 'vendors/hour', :f => builder %>
	      <% end %>
	    </table>
	  
	    <br><br>
		  <div id="map-delivery-boundaries-edit-div" style="margin-bottom: 30px">
		  
			  <h4>What are the delivery boundaries for this location?</h4>
	    
			   <ul style="margin-left: 30px; font-size: 12px">
			    <li>If you need to reset the boundaries and start over, <span style="color:blue; cursor: pointer" onClick="resetBoundries();">click here. </span> </li>
			    <li>You can also right-click anywhere on the map to undo your last boundary point placement.</li>
			    <li>Draw your boundaries below in a clockwise or counter-clockwise direction by clicking points on the map around your location.  </li>
				 </ul><br>
		  
			  <script type="text/javascript">
		
					var boundaryCoordinates = [];
					var lastBoundary;
					var boundaryMarker; 
					var map3Marker; 		
					var boundary; 
					var circle;		
					var map3 = null;
		
		      $(document).ready(function() {	
					
						  var latlng = new google.maps.LatLng(<%= @location.address.lat %>, <%= @location.address.lng %>);
					    var myOptions = {
					        zoom: 12,
					        center: latlng,
					        mapTypeId: google.maps.MapTypeId.ROADMAP
					    };
					    map3 = new google.maps.Map(document.getElementById("map3"), myOptions);
					    map3.setOptions({ draggableCursor: 'crosshair' });
						  map3Marker = new google.maps.Marker({
						      position: latlng,
						      map: map3, 
						      title: ''
						  });			
								
              $('.delivery-orders').click(function(){
	              google.maps.event.trigger(map3, 'resize')
	              map3.setCenter(latlng);
              });

	            <% if @location.delivery_boundaries.present? || @location.delivery_radius.blank? -%> 
	              google.maps.event.addListener(map3,'click',buildBoundaries);
						    google.maps.event.addListener(map3,'rightclick',removeLastBoundary);

					    
		            //---need to convert a string that looks like an array to an actual JS array of google latlng objects 
		            bcs = $('#delivery_boundaries_json').val();
		            bcs = bcs.replace(/[\[|\]|\s]/g, '');
		            bcs = bcs.split(",");
				        for(var i=0; i < (bcs.length - 1); i=i+2) {
							    boundaryCoordinates.push(new google.maps.LatLng(parseFloat(bcs[i]), parseFloat(bcs[i+1]))); 
							  } 
							  //----------------------
					
							  boundary = new google.maps.Polygon({
							    paths: boundaryCoordinates,
							    strokeColor: "#BD1206",
							    strokeOpacity: 0.7,
							    strokeWeight: 2,
							    fillColor: "#02DDD4",
							    fillOpacity: 0.3,
							    clickable: false
							  });

							  boundary.setMap(map3);
							  lastBoundary = boundary;
							
							<% else -%> 
							  					
								  circle = new google.maps.Circle({
								    strokeColor: "#BD1206",
								    strokeOpacity: 0.7,
								    strokeWeight: 2,
								    fillColor: "#02DDD4",
								    fillOpacity: 0.3,
								    clickable: false, 
								    map: map3, 
								    center: latlng, 
								    radius: <%= @location.delivery_radius * 1609.344 %>
								  });						

							<% end -%> 

				   
				      function removeLastBoundary(){

					      if (boundaryCoordinates.length > 0){
								  boundaryCoordinates.pop();
								  var lastPos = boundaryCoordinates[boundaryCoordinates.length - 1]
								  setBoundaries(lastPos);
					      }
				      }

				      function setBoundaries(pos){

								 var image = '<%= asset_path("dot-blue-transparent.png") -%>';

					        if (boundaryMarker){boundaryMarker.setMap(null);};

				          if (boundaryCoordinates.length < 2){
									  boundaryMarker = new google.maps.Marker({
									      position: pos,
									      map: map3,
									      icon: image
									  });
							    }

								  boundary = new google.maps.Polygon({
								    paths: boundaryCoordinates,
								    strokeColor: "#BD1206",
								    strokeOpacity: 0.7,
								    strokeWeight: 2,
								    fillColor: "#02DDD4",
								    fillOpacity: 0.3,
								    clickable: false
								  });

								  if (lastBoundary) {
								    lastBoundary.setMap(null);
								  };
								  boundary.setMap(map3);
								  lastBoundary = boundary;

					        var boutput = '[';
					        for(var i=0; i < boundaryCoordinates.length; i++) {
								    boutput += '[' + boundaryCoordinates[i].lat() + "," + boundaryCoordinates[i].lng() +  "]";
								    if (i != boundaryCoordinates.length - 1){boutput += ','}; 
								  }
								  boutput += ']';
								  $('#delivery_boundaries_json').val(boutput);	

				      }

					    function buildBoundaries(event) {
						    var thelatlng = new google.maps.LatLng(event.latLng.lat(), event.latLng.lng())
							  boundaryCoordinates.push(thelatlng);
				        setBoundaries(thelatlng); 
							}					
					
							
					});
				
					function resetBoundries(){

				    boundaryCoordinates = [];
				    $('#delivery_boundaries_json').val('[]');
				    lastBoundary.setMap(null);

		    	}
				</script>
 		
			  <div id="map3" style="width: 700px; height: 350px"></div>
		
			  <input type="hidden" id="delivery_boundaries_json" name="location[delivery_boundaries_json]" value="<%= @location.delivery_boundaries -%>">
	    
		
			</div>

    </div>
  <% end %>


	  <div class="field_group">
	    <h4>How would you classify this location? (select all that apply)</h4>
	    <div class='standard-tags'>

	      <% @count = 0 %>
	      <div id="left_column">

	        <% @tags.each do |tag| %>

	          <div class="field">
	            <%= check_box_tag 'location[tag_ids][]', tag.id, @tag_ids.include?(tag.id) %>
	            <%= tag.name %><br />
	          </div>

	          <% if (@count == @tags.count / 2) %>
	          </div>
	          <div id="right_column">
	          <% end %>
	          <% @count += 1 %>

	        <% end %>
	      </div>
	      <div class="clear"></div>

	    </div>
	    <!-- TODO:Greg Add a link with JS to show/hide additional tags. -->
	    <!-- No header needed. Default to not show. -->
	    <h4><a href="#" id="show_all_tags">View Additional Categories &raquo;</a></h4>

	    <div class="extra-tags" style="display:none;">
	      <% @count = 0 %>
	      <div id="left_column">

	        <% @extra_tags.each do |tag| %>

	          <div class="field">
	            <%= check_box_tag 'location[tag_ids][]', tag.id, @tag_ids.include?(tag.id) %>
	            <%= tag.name %><br />
	          </div>

	          <% if (@count == @extra_tags.count / 2) %>
	          </div>
	          <div id="right_column">
	          <% end %>
	          <% @count += 1 %>

	        <% end %>
	      </div>
	      <div class="clear"></div>
	
	
	    </div>

    

    <div id="map2_container" style="display:none;">
      <br><hr>
      <h3>Confirm the exact spot of this location</h3>
      <p>Click below to fix if necessary. It's important to pinpoint your storefront location (i.e. your front door) as accurately as possible.</p><br>
      <div id="map2" style="width: 600px; height: 300px;"></div>
    </div>

  </div>
<% end %>

<% content_for :integration do %>

  <div class="field_group integrate">
    <h3>How you would like to integrate with Hit The Spot?</h3>
    <div class="field label_yes_no">
      <%= f.radio_button :integrate_pos, false, :checked => true, :class => 'integration no' %>
      <%= f.label :integrate_pos_false, "Receive orders via phone, fax, email, text, and/or the web." %>
      <p class="info_note">Your Hit the Spot&reg; dashboard will be updated with all new orders
        in real time. You can monitor these updates via a computer, tablet, or
        any other web-enabled device. In addition, we can send you the order via email, voice, and/or fax, and notify you of new orders via text. This option costs only 10% of each transaction (we take care of billing customers for you and deposit the money, less 10%, into your bank account every week).</p>
    </div>
    <div class="field label_yes_no">
      <%= f.radio_button :integrate_pos, true, :class => 'integration yes' %>
      <%= f.label :integrate_pos_true, "Integrate into this location's Point of Sale system." %>
      <p class="info_note">Credit card transactions will be processed per usual through your system and we'll sync with your menu to show customers. This option costs $20/mo after a free 30-day trial (no obligation) plus 10% of each transaction.</p>
    </div>
    <div class="field_group">
      <div class="pos-integration">
        <h4>Point of Sale Information</h4>
        <%= f.fields_for :pos_account do |builder| %>
          <%= render 'vendors/pos_account', :f => builder %>
        <% end %>
        <p><b>Note:</b> more make/models are coming soon.  If your PoS is not in this list then please select the dashboard integration option and we can easily switch you over later when your PoS becomes available. </p>
      </div>
    </div>
  </div>

  <% if @location.vendor.has_completed_final_signup? %>

	  <div class="field_group standard-integration integrate">
	    <h4>How would you like to send us your menu details?</h4>
	    <div class="field label_yes_no">
	      <%= f.radio_button :menu_type, 'upload_doc', :checked => true, :class => 'location_menu_type doc' %>
	      <%= f.label :menu_type_upload_doc, "Upload menu document(s)" %>
	      <p class="info_note">We will build your menu from one or more documents you upload below.</p><br />
	      <%= f.radio_button :menu_type, 'web_url', :class => 'location_menu_type web' %>
	      <%= f.label :menu_type_web_url, "Website address" %>
	      <p class="info_note">We will build your menu from one posted online.</p><br />
	      <%= f.radio_button :menu_type, 'openmenu', :class => 'location_menu_type openmenu' %>
	      <%= f.label :menu_type_openmenu, "OpenMenu URL" %>
	      <p class="info_note">We will sync your menu and hours of operation from an OpenMenu&reg; URL. <a target="_blank" href="/faq#open-menu">Learn more &raquo;</a></p><br />
	    </div>
	    <div class="web-url field">
	      <h4>Menu on a website</h4>
	      <p>
	        <%= f.label :menu_url, "Menu URL" %><br />
	        <%= f.text_field :menu_url %>
	      </p>
	    </div>

	    <div class='upload-doc field'>
	      <h4>Upload a menu</h4>
	      <%= f.fields_for :menu_uploads do |builder| %>
	        <%= render 'vendors/menu_upload', :f => builder %>
	      <% end %>
	      <%= add_child_link("Add an additional menu", :menu_uploads) %>
	      <%= new_child_fields_template(f, :menu_uploads, :partial => 'vendors/menu_upload') %>
	    </div>

	    <div class='openmenu-url field'>
	      <h4>Use an OpenMenu</h4>
	      <p>
	        <%= f.label :openmenu_url, "Your OpenMenu Feed URL (i.e. to the raw code output)" %><br />
	        <%= f.text_field :openmenu_url, :class=>"textfield"%>
	      </p>
	    </div>
	  </div>

  <% end %>

<% end %>

<% content_for :billing_and_banking do %>
  <div class="field_group">
    <h3>Financial Details</h3>
    <div class="field_group">
      <div class="pos-integration">
        <h4>Billing Information</h4>
        <%= f.fields_for :billing_method do |builder| %>
          <%= render 'vendors/billing_method', :f => builder %>
        <% end %>
      </div>
    </div>
    <div class="field_group">
      <div class="standard-integration">
        <h4>Banking Information</h4>
        <%= f.fields_for :bank_account do |builder| %>
          <%= render 'vendors/bank_account', :f => builder %>
        <% end %>
      </div>
    </div>
  </div>
<% end %>

<% content_for :additional_location_links do %>

  <% if @location.vendor.has_completed_final_signup? %>

	  <div class="field_group">
	    <h4>Tell us more about this location so we can point more customers to you!</h4>
	    <%= f.fields_for :links do |builder| %>
	      <%= render 'vendors/hard_link', :f => builder %>
	    <% end %>
	    <div class="field"><%= add_child_link("Add an additional link", :links) %></div>
	    <%= new_child_fields_template(f, :links, :partial => 'vendors/link') %>
	  </div>

  <% end %>

<% end %>
